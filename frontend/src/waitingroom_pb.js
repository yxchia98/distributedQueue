// source: waitingroom.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require("google-protobuf");
var goog = jspb;
var global = Function("return this")();

goog.exportSymbol("proto.waitingroom.DequeueCustomerReply", null, global);
goog.exportSymbol("proto.waitingroom.DequeueCustomerRequest", null, global);
goog.exportSymbol("proto.waitingroom.EnqueueCustomerReply", null, global);
goog.exportSymbol("proto.waitingroom.EnqueueCustomerRequest", null, global);
goog.exportSymbol("proto.waitingroom.ValidateTokenReply", null, global);
goog.exportSymbol("proto.waitingroom.ValidateTokenRequest", null, global);
goog.exportSymbol("proto.waitingroom.WaitQueueReply", null, global);
goog.exportSymbol("proto.waitingroom.WaitQueueRequest", null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.waitingroom.EnqueueCustomerRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.waitingroom.EnqueueCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.waitingroom.EnqueueCustomerRequest.displayName =
    "proto.waitingroom.EnqueueCustomerRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.waitingroom.EnqueueCustomerReply = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.waitingroom.EnqueueCustomerReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.waitingroom.EnqueueCustomerReply.displayName =
    "proto.waitingroom.EnqueueCustomerReply";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.waitingroom.WaitQueueRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.waitingroom.WaitQueueRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.waitingroom.WaitQueueRequest.displayName =
    "proto.waitingroom.WaitQueueRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.waitingroom.WaitQueueReply = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.waitingroom.WaitQueueReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.waitingroom.WaitQueueReply.displayName =
    "proto.waitingroom.WaitQueueReply";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.waitingroom.DequeueCustomerRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.waitingroom.DequeueCustomerRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.waitingroom.DequeueCustomerRequest.displayName =
    "proto.waitingroom.DequeueCustomerRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.waitingroom.DequeueCustomerReply = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.waitingroom.DequeueCustomerReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.waitingroom.DequeueCustomerReply.displayName =
    "proto.waitingroom.DequeueCustomerReply";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.waitingroom.ValidateTokenRequest = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.waitingroom.ValidateTokenRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.waitingroom.ValidateTokenRequest.displayName =
    "proto.waitingroom.ValidateTokenRequest";
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.waitingroom.ValidateTokenReply = function (opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.waitingroom.ValidateTokenReply, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.waitingroom.ValidateTokenReply.displayName =
    "proto.waitingroom.ValidateTokenReply";
}

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.waitingroom.EnqueueCustomerRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.waitingroom.EnqueueCustomerRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.waitingroom.EnqueueCustomerRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.waitingroom.EnqueueCustomerRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        ipaddr: jspb.Message.getFieldWithDefault(msg, 1, ""),
        macaddr: jspb.Message.getFieldWithDefault(msg, 2, ""),
        phonenum: jspb.Message.getFieldWithDefault(msg, 3, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.waitingroom.EnqueueCustomerRequest}
 */
proto.waitingroom.EnqueueCustomerRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.waitingroom.EnqueueCustomerRequest();
  return proto.waitingroom.EnqueueCustomerRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.waitingroom.EnqueueCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.waitingroom.EnqueueCustomerRequest}
 */
proto.waitingroom.EnqueueCustomerRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        case 1:
          var value = /** @type {string} */ (reader.readString());
          msg.setIpaddr(value);
          break;
        case 2:
          var value = /** @type {string} */ (reader.readString());
          msg.setMacaddr(value);
          break;
        case 3:
          var value = /** @type {string} */ (reader.readString());
          msg.setPhonenum(value);
          break;
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.waitingroom.EnqueueCustomerRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.waitingroom.EnqueueCustomerRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.waitingroom.EnqueueCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.waitingroom.EnqueueCustomerRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getIpaddr();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMacaddr();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getPhonenum();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string ipaddr = 1;
 * @return {string}
 */
proto.waitingroom.EnqueueCustomerRequest.prototype.getIpaddr = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.EnqueueCustomerRequest} returns this
 */
proto.waitingroom.EnqueueCustomerRequest.prototype.setIpaddr = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string macaddr = 2;
 * @return {string}
 */
proto.waitingroom.EnqueueCustomerRequest.prototype.getMacaddr = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.EnqueueCustomerRequest} returns this
 */
proto.waitingroom.EnqueueCustomerRequest.prototype.setMacaddr = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string phonenum = 3;
 * @return {string}
 */
proto.waitingroom.EnqueueCustomerRequest.prototype.getPhonenum = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.EnqueueCustomerRequest} returns this
 */
proto.waitingroom.EnqueueCustomerRequest.prototype.setPhonenum = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.waitingroom.EnqueueCustomerReply.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.waitingroom.EnqueueCustomerReply.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.waitingroom.EnqueueCustomerReply} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.waitingroom.EnqueueCustomerReply.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        status: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.waitingroom.EnqueueCustomerReply}
 */
proto.waitingroom.EnqueueCustomerReply.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.waitingroom.EnqueueCustomerReply();
  return proto.waitingroom.EnqueueCustomerReply.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.waitingroom.EnqueueCustomerReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.waitingroom.EnqueueCustomerReply}
 */
proto.waitingroom.EnqueueCustomerReply.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setStatus(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.waitingroom.EnqueueCustomerReply.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.waitingroom.EnqueueCustomerReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.waitingroom.EnqueueCustomerReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.waitingroom.EnqueueCustomerReply.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getStatus();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string status = 1;
 * @return {string}
 */
proto.waitingroom.EnqueueCustomerReply.prototype.getStatus = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.EnqueueCustomerReply} returns this
 */
proto.waitingroom.EnqueueCustomerReply.prototype.setStatus = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.waitingroom.WaitQueueRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.waitingroom.WaitQueueRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.waitingroom.WaitQueueRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.waitingroom.WaitQueueRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        ipaddr: jspb.Message.getFieldWithDefault(msg, 1, ""),
        macaddr: jspb.Message.getFieldWithDefault(msg, 2, ""),
        phonenum: jspb.Message.getFieldWithDefault(msg, 3, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.waitingroom.WaitQueueRequest}
 */
proto.waitingroom.WaitQueueRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.waitingroom.WaitQueueRequest();
  return proto.waitingroom.WaitQueueRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.waitingroom.WaitQueueRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.waitingroom.WaitQueueRequest}
 */
proto.waitingroom.WaitQueueRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setIpaddr(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMacaddr(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setPhonenum(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.waitingroom.WaitQueueRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.waitingroom.WaitQueueRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.waitingroom.WaitQueueRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.waitingroom.WaitQueueRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getIpaddr();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMacaddr();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getPhonenum();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
};

/**
 * optional string ipaddr = 1;
 * @return {string}
 */
proto.waitingroom.WaitQueueRequest.prototype.getIpaddr = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.WaitQueueRequest} returns this
 */
proto.waitingroom.WaitQueueRequest.prototype.setIpaddr = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string macaddr = 2;
 * @return {string}
 */
proto.waitingroom.WaitQueueRequest.prototype.getMacaddr = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.WaitQueueRequest} returns this
 */
proto.waitingroom.WaitQueueRequest.prototype.setMacaddr = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string phonenum = 3;
 * @return {string}
 */
proto.waitingroom.WaitQueueRequest.prototype.getPhonenum = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.WaitQueueRequest} returns this
 */
proto.waitingroom.WaitQueueRequest.prototype.setPhonenum = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.waitingroom.WaitQueueReply.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.waitingroom.WaitQueueReply.toObject(opt_includeInstance, this);
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.waitingroom.WaitQueueReply} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.waitingroom.WaitQueueReply.toObject = function (includeInstance, msg) {
    var f,
      obj = {
        ipaddr: jspb.Message.getFieldWithDefault(msg, 1, ""),
        macaddr: jspb.Message.getFieldWithDefault(msg, 2, ""),
        phonenum: jspb.Message.getFieldWithDefault(msg, 3, ""),
        token: jspb.Message.getFieldWithDefault(msg, 4, ""),
        url: jspb.Message.getFieldWithDefault(msg, 5, ""),
        selected: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.waitingroom.WaitQueueReply}
 */
proto.waitingroom.WaitQueueReply.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.waitingroom.WaitQueueReply();
  return proto.waitingroom.WaitQueueReply.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.waitingroom.WaitQueueReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.waitingroom.WaitQueueReply}
 */
proto.waitingroom.WaitQueueReply.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setIpaddr(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMacaddr(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setPhonenum(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setToken(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setUrl(value);
        break;
      case 6:
        var value = /** @type {boolean} */ (reader.readBool());
        msg.setSelected(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.waitingroom.WaitQueueReply.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.waitingroom.WaitQueueReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.waitingroom.WaitQueueReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.waitingroom.WaitQueueReply.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getIpaddr();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMacaddr();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getPhonenum();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
  f = message.getSelected();
  if (f) {
    writer.writeBool(6, f);
  }
};

/**
 * optional string ipaddr = 1;
 * @return {string}
 */
proto.waitingroom.WaitQueueReply.prototype.getIpaddr = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.WaitQueueReply} returns this
 */
proto.waitingroom.WaitQueueReply.prototype.setIpaddr = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string macaddr = 2;
 * @return {string}
 */
proto.waitingroom.WaitQueueReply.prototype.getMacaddr = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.WaitQueueReply} returns this
 */
proto.waitingroom.WaitQueueReply.prototype.setMacaddr = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string phonenum = 3;
 * @return {string}
 */
proto.waitingroom.WaitQueueReply.prototype.getPhonenum = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.WaitQueueReply} returns this
 */
proto.waitingroom.WaitQueueReply.prototype.setPhonenum = function (value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string token = 4;
 * @return {string}
 */
proto.waitingroom.WaitQueueReply.prototype.getToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.WaitQueueReply} returns this
 */
proto.waitingroom.WaitQueueReply.prototype.setToken = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string url = 5;
 * @return {string}
 */
proto.waitingroom.WaitQueueReply.prototype.getUrl = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.WaitQueueReply} returns this
 */
proto.waitingroom.WaitQueueReply.prototype.setUrl = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

/**
 * optional bool selected = 6;
 * @return {boolean}
 */
proto.waitingroom.WaitQueueReply.prototype.getSelected = function () {
  return /** @type {boolean} */ (
    jspb.Message.getBooleanFieldWithDefault(this, 6, false)
  );
};

/**
 * @param {boolean} value
 * @return {!proto.waitingroom.WaitQueueReply} returns this
 */
proto.waitingroom.WaitQueueReply.prototype.setSelected = function (value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.waitingroom.DequeueCustomerRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.waitingroom.DequeueCustomerRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.waitingroom.DequeueCustomerRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.waitingroom.DequeueCustomerRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {};

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.waitingroom.DequeueCustomerRequest}
 */
proto.waitingroom.DequeueCustomerRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.waitingroom.DequeueCustomerRequest();
  return proto.waitingroom.DequeueCustomerRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.waitingroom.DequeueCustomerRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.waitingroom.DequeueCustomerRequest}
 */
proto.waitingroom.DequeueCustomerRequest.deserializeBinaryFromReader =
  function (msg, reader) {
    while (reader.nextField()) {
      if (reader.isEndGroup()) {
        break;
      }
      var field = reader.getFieldNumber();
      switch (field) {
        default:
          reader.skipField();
          break;
      }
    }
    return msg;
  };

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.waitingroom.DequeueCustomerRequest.prototype.serializeBinary =
  function () {
    var writer = new jspb.BinaryWriter();
    proto.waitingroom.DequeueCustomerRequest.serializeBinaryToWriter(
      this,
      writer
    );
    return writer.getResultBuffer();
  };

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.waitingroom.DequeueCustomerRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.waitingroom.DequeueCustomerRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.waitingroom.DequeueCustomerReply.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.waitingroom.DequeueCustomerReply.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.waitingroom.DequeueCustomerReply} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.waitingroom.DequeueCustomerReply.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        ipaddr: jspb.Message.getFieldWithDefault(msg, 1, ""),
        macaddr: jspb.Message.getFieldWithDefault(msg, 2, ""),
        phonenum: jspb.Message.getFieldWithDefault(msg, 3, ""),
        intime: jspb.Message.getFieldWithDefault(msg, 4, ""),
        outtime: jspb.Message.getFieldWithDefault(msg, 5, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.waitingroom.DequeueCustomerReply}
 */
proto.waitingroom.DequeueCustomerReply.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.waitingroom.DequeueCustomerReply();
  return proto.waitingroom.DequeueCustomerReply.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.waitingroom.DequeueCustomerReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.waitingroom.DequeueCustomerReply}
 */
proto.waitingroom.DequeueCustomerReply.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setIpaddr(value);
        break;
      case 2:
        var value = /** @type {string} */ (reader.readString());
        msg.setMacaddr(value);
        break;
      case 3:
        var value = /** @type {string} */ (reader.readString());
        msg.setPhonenum(value);
        break;
      case 4:
        var value = /** @type {string} */ (reader.readString());
        msg.setIntime(value);
        break;
      case 5:
        var value = /** @type {string} */ (reader.readString());
        msg.setOuttime(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.waitingroom.DequeueCustomerReply.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.waitingroom.DequeueCustomerReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.waitingroom.DequeueCustomerReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.waitingroom.DequeueCustomerReply.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getIpaddr();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
  f = message.getMacaddr();
  if (f.length > 0) {
    writer.writeString(2, f);
  }
  f = message.getPhonenum();
  if (f.length > 0) {
    writer.writeString(3, f);
  }
  f = message.getIntime();
  if (f.length > 0) {
    writer.writeString(4, f);
  }
  f = message.getOuttime();
  if (f.length > 0) {
    writer.writeString(5, f);
  }
};

/**
 * optional string ipaddr = 1;
 * @return {string}
 */
proto.waitingroom.DequeueCustomerReply.prototype.getIpaddr = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.DequeueCustomerReply} returns this
 */
proto.waitingroom.DequeueCustomerReply.prototype.setIpaddr = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

/**
 * optional string macaddr = 2;
 * @return {string}
 */
proto.waitingroom.DequeueCustomerReply.prototype.getMacaddr = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.DequeueCustomerReply} returns this
 */
proto.waitingroom.DequeueCustomerReply.prototype.setMacaddr = function (value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};

/**
 * optional string phonenum = 3;
 * @return {string}
 */
proto.waitingroom.DequeueCustomerReply.prototype.getPhonenum = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.DequeueCustomerReply} returns this
 */
proto.waitingroom.DequeueCustomerReply.prototype.setPhonenum = function (
  value
) {
  return jspb.Message.setProto3StringField(this, 3, value);
};

/**
 * optional string inTime = 4;
 * @return {string}
 */
proto.waitingroom.DequeueCustomerReply.prototype.getIntime = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.DequeueCustomerReply} returns this
 */
proto.waitingroom.DequeueCustomerReply.prototype.setIntime = function (value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};

/**
 * optional string outTime = 5;
 * @return {string}
 */
proto.waitingroom.DequeueCustomerReply.prototype.getOuttime = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.DequeueCustomerReply} returns this
 */
proto.waitingroom.DequeueCustomerReply.prototype.setOuttime = function (value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.waitingroom.ValidateTokenRequest.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.waitingroom.ValidateTokenRequest.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.waitingroom.ValidateTokenRequest} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.waitingroom.ValidateTokenRequest.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        token: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.waitingroom.ValidateTokenRequest}
 */
proto.waitingroom.ValidateTokenRequest.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.waitingroom.ValidateTokenRequest();
  return proto.waitingroom.ValidateTokenRequest.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.waitingroom.ValidateTokenRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.waitingroom.ValidateTokenRequest}
 */
proto.waitingroom.ValidateTokenRequest.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setToken(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.waitingroom.ValidateTokenRequest.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.waitingroom.ValidateTokenRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.waitingroom.ValidateTokenRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.waitingroom.ValidateTokenRequest.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string token = 1;
 * @return {string}
 */
proto.waitingroom.ValidateTokenRequest.prototype.getToken = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.ValidateTokenRequest} returns this
 */
proto.waitingroom.ValidateTokenRequest.prototype.setToken = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

if (jspb.Message.GENERATE_TO_OBJECT) {
  /**
   * Creates an object representation of this proto.
   * Field names that are reserved in JavaScript and will be renamed to pb_name.
   * Optional fields that are not set will be set to undefined.
   * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
   * For the list of reserved names please see:
   *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
   * @param {boolean=} opt_includeInstance Deprecated. whether to include the
   *     JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @return {!Object}
   */
  proto.waitingroom.ValidateTokenReply.prototype.toObject = function (
    opt_includeInstance
  ) {
    return proto.waitingroom.ValidateTokenReply.toObject(
      opt_includeInstance,
      this
    );
  };

  /**
   * Static version of the {@see toObject} method.
   * @param {boolean|undefined} includeInstance Deprecated. Whether to include
   *     the JSPB instance for transitional soy proto support:
   *     http://goto/soy-param-migration
   * @param {!proto.waitingroom.ValidateTokenReply} msg The msg instance to transform.
   * @return {!Object}
   * @suppress {unusedLocalVariables} f is only used for nested messages
   */
  proto.waitingroom.ValidateTokenReply.toObject = function (
    includeInstance,
    msg
  ) {
    var f,
      obj = {
        validated: jspb.Message.getFieldWithDefault(msg, 1, ""),
      };

    if (includeInstance) {
      obj.$jspbMessageInstance = msg;
    }
    return obj;
  };
}

/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.waitingroom.ValidateTokenReply}
 */
proto.waitingroom.ValidateTokenReply.deserializeBinary = function (bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.waitingroom.ValidateTokenReply();
  return proto.waitingroom.ValidateTokenReply.deserializeBinaryFromReader(
    msg,
    reader
  );
};

/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.waitingroom.ValidateTokenReply} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.waitingroom.ValidateTokenReply}
 */
proto.waitingroom.ValidateTokenReply.deserializeBinaryFromReader = function (
  msg,
  reader
) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
      case 1:
        var value = /** @type {string} */ (reader.readString());
        msg.setValidated(value);
        break;
      default:
        reader.skipField();
        break;
    }
  }
  return msg;
};

/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.waitingroom.ValidateTokenReply.prototype.serializeBinary = function () {
  var writer = new jspb.BinaryWriter();
  proto.waitingroom.ValidateTokenReply.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};

/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.waitingroom.ValidateTokenReply} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.waitingroom.ValidateTokenReply.serializeBinaryToWriter = function (
  message,
  writer
) {
  var f = undefined;
  f = message.getValidated();
  if (f.length > 0) {
    writer.writeString(1, f);
  }
};

/**
 * optional string validated = 1;
 * @return {string}
 */
proto.waitingroom.ValidateTokenReply.prototype.getValidated = function () {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};

/**
 * @param {string} value
 * @return {!proto.waitingroom.ValidateTokenReply} returns this
 */
proto.waitingroom.ValidateTokenReply.prototype.setValidated = function (value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};

goog.object.extend(exports, proto.waitingroom);
